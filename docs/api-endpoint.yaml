openapi: "3.0.0"

info:
  title: Backend Endpoint
  version: 0.0.1

tags:
  - name: articles
    description: 記事機能に関するエンドポイント
  - name: follows
    description: フォロー機能に関するエンドポイント
  - name: likes
    description: いいね機能に関するエンドポイント
  - name: bookmarks
    description: ブックマーク機能に関するエンドポイント
  - name: ratings
    description: 評価機能に関するエンドポイント
  - name: tags
    description: 技術タグ機能に関するエンドポイント
  - name: notices
    description: 通知機能に関するエンドポイント

servers:
  - url: http://localhost:3000/api
    description: 開発環境でのエンドポイント

paths:
  /articles:
    get:
      summary: 記事の取得
      tags:
        - articles
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleListResponse"
    post:
      summary: 記事の登録
      tags:
        - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleRequest"
      responses:
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleCreatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
  /articles/{articleUrl}:
    get:
      summary: 記事の取得
      tags:
        - articles
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleDetailResponse"
        "404":
          description: 記事が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
    put:
      summary: 記事の更新
      tags:
        - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleRequest"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleUpdatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: 記事が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
    delete:
      summary: 記事の削除
      tags:
        - articles
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSuccessResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: 記事が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /follows:
    post:
      summary: ユーザーフォローの作成
      tags:
        - follows
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FollowRequest"
      responses:
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FollowCreatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "409":
          description: 既にフォローしている
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictErrorResponse"
    delete:
      summary: ユーザーフォローの削除
      tags:
        - follows
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FollowRequest"
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSuccessResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: フォローが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /follows/from/{userId}:
    get:
      summary: フォローしているユーザーの取得
      tags:
        - follows
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "404":
          description: ユーザーが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /follows/to/{userId}:
    get:
      summary: フォローされているユーザーの取得
      tags:
        - follows
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "404":
          description: ユーザーが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"

  /likes:
    post:
      summary: いいねの作成
      tags:
        - likes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LikeRequest"
      responses:
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LikeCreatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "409":
          description: 既にいいねしている
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictErrorResponse"
    delete:
      summary: いいねの削除
      tags:
        - likes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LikeRequest"
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSuccessResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: いいねが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /likes/article/{articleUrl}:
    get:
      summary: 記事に対していいねしているユーザーの取得
      tags:
        - likes
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "404":
          description: 記事が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /likes/user/{userId}:
    get:
      summary: ユーザーがいいねしている記事の取得
      tags:
        - likes
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleListResponse"
        "404":
          description: ユーザーが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"

  /bookmarks:
    post:
      summary: ブックマークの作成
      tags:
        - bookmarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookmarkRequest"
      responses:
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookmarkCreatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "409":
          description: 既にブックマークしている
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictErrorResponse"
    delete:
      summary: ブックマークの削除
      tags:
        - bookmarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookmarkRequest"
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSuccessResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: ブックマークが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /bookmarks/article/{articleUrl}:
    get:
      summary: 記事をブックマークしているユーザーの取得
      tags:
        - bookmarks
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "404":
          description: 記事が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /bookmarks/user/{userId}:
    get:
      summary: ユーザーがブックマークしている記事の取得
      tags:
        - bookmarks
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleListResponse"
        "404":
          description: ユーザーが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"

  /ratings/difficulty:
    post:
      summary: 記事の難易度評価
      tags:
        - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RatingRequest"
      responses:
        "201":
          description: 評価成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingCreatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: 記事が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
        "409":
          description: 既に評価している
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictErrorResponse"
    put:
      summary: 記事の難易度評価の更新
      tags:
        - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RatingRequest"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingUpdatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: 記事または評価が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"

    delete:
      summary: 記事の難易度評価の削除
      tags:
        - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RatingRequest"
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSuccessResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: 記事または評価が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /ratings/difficulty/{articleUrl}:
    get:
      summary: 記事の難易度評価平均の取得
      tags:
        - ratings
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingResponse"
        "404":
          description: 記事が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /ratings/technical:
    post:
      summary: 記事の技術評価
      tags:
        - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RatingRequest"
      responses:
        "201":
          description: 評価成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingCreatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: 記事が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
        "409":
          description: 既に評価している
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictErrorResponse"
    put:
      summary: 記事の技術評価の更新
      tags:
        - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RatingRequest"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingUpdatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: 記事または評価が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
    delete:
      summary: 記事の技術評価の削除
      tags:
        - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RatingRequest"
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSuccessResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: 記事または評価が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /ratings/technical/{articleUrl}:
    get:
      summary: 記事の技術評価平均の取得
      tags:
        - ratings
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingResponse"
        "404":
          description: 記事が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"

  /tags:
    get:
      summary: タグの一覧取得
      tags:
        - tags
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagListResponse"
    post:
      summary: タグの作成
      tags:
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagRequest"
      responses:
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagCreatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "409":
          description: 既にタグが存在する
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictErrorResponse"
  /tags/tag/{tagName}:
    get:
      summary: タグの詳細取得
      tags:
        - tags
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagDetailResponse"
        "404":
          description: タグが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
    put:
      summary: タグの更新
      tags:
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagRequest"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagUpdatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: タグが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
    delete:
      summary: タグの削除
      tags:
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagRequest"
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSuccessResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: タグが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /tags/user:
    post:
      summary: ユーザーとタグの紐づけ追加
      tags:
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserTagRequest"
      responses:
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserTagCreatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "409":
          description: 既にタグが存在する
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictErrorResponse"
  /tags/user/{userId}:
    get:
      summary: ユーザーに紐づいているタグの取得
      tags:
        - tags
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagListResponse"
        "404":
          description: ユーザーが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
    delete:
      summary: ユーザーとタグの紐づけの削除
      tags:
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserTagRequest"
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSuccessResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: タグが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /notices:
    post:
      summary: 通知の作成
      tags:
        - notices
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoticeCreateRequest"
      responses:
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoticeCreatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
  /notices/notice/{noticeId}:
    put:
      summary: 通知の更新
      tags:
        - notices
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoticeUpdateRequest"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoticeCreatedResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: 通知が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
    delete:
      summary: 通知の削除
      tags:
        - notices
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSuccessResponse"
        "400":
          description: リクエストボディが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestErrorResponse"
        "404":
          description: 通知が存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /notices/user/{userId}:
    get:
      summary: ユーザーに対する通知一覧の取得
      tags:
        - notices
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoticeListResponse"
        "404":
          description: ユーザーが存在しない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"

components:
  schemas:
    ArticleRequest:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: 記事のURL
    FollowRequest:
      type: object
      required:
        - fromUserId
        - toUserId
      properties:
        fromUserId:
          type: number
          description: フォローするユーザーのID
        toUserId:
          type: number
          description: フォローされるユーザーのID
    LikeRequest:
      type: object
      required:
        - userId
        - articleUrl
      properties:
        userId:
          type: number
          description: いいねするユーザーのID
        articleUrl:
          type: string
          description: いいねされる記事のURL
    BookmarkRequest:
      type: object
      required:
        - userId
        - articleUrl
      properties:
        userId:
          type: number
          description: ブックマークするユーザーのID
        articleUrl:
          type: string
          description: ブックマークされる記事のURL
    RatingRequest:
      type: object
      required:
        - userId
        - articleUrl
        - rating
      properties:
        userId:
          type: number
          description: 評価するユーザーのID
        articleUrl:
          type: string
          description: 評価される記事のURL
        rating:
          type: number
          description: 評価値
    TagRequest:
      type: object
      required:
        - articleUrl
        - tagName
      properties:
        tagName:
          type: string
          description: 追加するタグ名
        iconUrl:
          type: string
          description: タグのアイコンのURL
    UserTagRequest:
      type: object
      required:
        - userId
        - tagName
      properties:
        userId:
          type: number
          description: ユーザーのID
        tagName:
          type: string
          description: タグの名前
    NoticeCreateRequest:
      type: object
      required:
        - userId
        - message
      properties:
        userId:
          type: number
          description: 通知を受け取るユーザーのID
        message:
          type: string
          description: 通知メッセージ
    NoticeUpdateRequest:
      type: object
      properties:
        userId:
          type: number
          description: 通知を受け取るユーザーのID
        message:
          type: string
          description: 通知メッセージ
        readFlag:
          type: boolean
          description: 既読フラグ

    ArticleCreatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Created Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            url:
              type: string
              description: URL
    ArticleUpdatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Updated Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            url:
              type: string
              description: URL
    ArticleListResponse:
      type: object
      properties:
        message:
          type: string
          example: "Success"
        data:
          type: object
          properties:
            articleList:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                    description: ID
                  url:
                    type: string
                    description: URL
    ArticleDetailResponse:
      type: object
      properties:
        message:
          type: string
          example: "Success"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            url:
              type: string
              description: URL
    FollowCreatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Created Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            fromUserId:
              type: number
              description: フォローするユーザーのID
            toUserId:
              type: number
              description: フォローされるユーザーのID
    LikeCreatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Created Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            userId:
              type: number
              description: いいねするユーザーのID
            articleUrl:
              type: string
              description: いいねされる記事のURL
    BookmarkCreatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Created Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            userId:
              type: number
              description: ブックマークするユーザーのID
            articleUrl:
              type: string
              description: ブックマークされる記事のURL
    RatingCreatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Created Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            userId:
              type: number
              description: 評価するユーザーのID
            articleUrl:
              type: string
              description: 評価される記事のURL
            rating:
              type: number
              description: 評価値
    RatingUpdatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Updated Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            userId:
              type: number
              description: 評価するユーザーのID
            articleUrl:
              type: string
              description: 評価される記事のURL
            rating:
              type: number
              description: 評価値
    UserTagCreatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Created Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            userId:
              type: number
              description: ユーザーのID
            tagName:
              type: string
              description: タグの名前
    UserListResponse:
      type: object
      properties:
        message:
          type: string
          example: "Success"
        data:
          type: object
          properties:
            userList:
              type: array
              properties:
                userId:
                  type: number
                  description: ID
              description: ユーザーのリスト
    RatingResponse:
      type: object
      properties:
        message:
          type: string
          example: "Success"
        data:
          type: object
          properties:
            rating:
              type: number
              description: 評価値
    TagListResponse:
      type: object
      properties:
        message:
          type: string
          example: "Success"
        data:
          type: object
          properties:
            tagList:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                    description: ID
                  tagName:
                    type: string
                    description: タグ名
                  iconUrl:
                    type: string
                    description: タグのアイコンのURL
    TagCreatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Created Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            tagName:
              type: string
              description: タグ名
            iconUrl:
              type: string
              description: タグのアイコンのURL
    TagUpdatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Updated Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            tagName:
              type: string
              description: タグ名
            iconUrl:
              type: string
              description: タグのアイコンのURL
    TagDetailResponse:
      type: object
      properties:
        message:
          type: string
          example: "Success"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            tagName:
              type: string
              description: タグ名
            iconUrl:
              type: string
              description: タグのアイコンのURL
    NoticeCreatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "Created Successful"
        data:
          type: object
          properties:
            id:
              type: number
              description: ID
            userId:
              type: number
              description: 通知を受け取るユーザーのID
            message:
              type: string
              description: 通知メッセージ
            readFlag:
              type: boolean
              description: 既読フラグ
    NoticeListResponse:
      type: object
      properties:
        message:
          type: string
          example: "Success"
        data:
          type: object
          properties:
            noticeList:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                    description: ID
                  userId:
                    type: number
                    description: 通知を受け取るユーザーのID
                  message:
                    type: string
                    description: 通知メッセージ
                  readFlag:
                    type: boolean
                    description: 既読フラグ

    DeleteSuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: "Deleted Successful"

    InvalidRequestErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Invalid Request"
    ConflictErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Conflict"
    NotFoundErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Not Found"
